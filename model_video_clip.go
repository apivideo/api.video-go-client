/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// VideoClip Use this object to create a smaller clip from a video you upload.  - You can only create video clips in the same request where you create the video container. - You cannot update the starting or ending timestamps of a video clip after you created the video container. - When you upload a video file into a container where you defined a starting and ending timestamp, the API trims the video according to those timestamps to create a clip.
type VideoClip struct {
	// The timestamp that defines the beginning of the video clip you want to create. The value must follow the `HH:MM:SS` format.
	StartTimecode *string `json:"startTimecode,omitempty"`
	// The timestamp that defines the end of the video clip you want to create. The value must follow the `HH:MM:SS` format.
	EndTimecode *string `json:"endTimecode,omitempty"`
}

// NewVideoClip instantiates a new VideoClip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoClip() *VideoClip {
	this := VideoClip{}
	return &this
}

// NewVideoClipWithDefaults instantiates a new VideoClip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoClipWithDefaults() *VideoClip {
	this := VideoClip{}
	return &this
}

// GetStartTimecode returns the StartTimecode field value if set, zero value otherwise.
func (o *VideoClip) GetStartTimecode() string {
	if o == nil || o.StartTimecode == nil {
		var ret string
		return ret
	}
	return *o.StartTimecode
}

// GetStartTimecodeOk returns a tuple with the StartTimecode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoClip) GetStartTimecodeOk() (*string, bool) {
	if o == nil || o.StartTimecode == nil {
		return nil, false
	}
	return o.StartTimecode, true
}

// HasStartTimecode returns a boolean if a field has been set.
func (o *VideoClip) HasStartTimecode() bool {
	if o != nil && o.StartTimecode != nil {
		return true
	}

	return false
}

// SetStartTimecode gets a reference to the given string and assigns it to the StartTimecode field.
func (o *VideoClip) SetStartTimecode(v string) {
	o.StartTimecode = &v
}

// GetEndTimecode returns the EndTimecode field value if set, zero value otherwise.
func (o *VideoClip) GetEndTimecode() string {
	if o == nil || o.EndTimecode == nil {
		var ret string
		return ret
	}
	return *o.EndTimecode
}

// GetEndTimecodeOk returns a tuple with the EndTimecode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoClip) GetEndTimecodeOk() (*string, bool) {
	if o == nil || o.EndTimecode == nil {
		return nil, false
	}
	return o.EndTimecode, true
}

// HasEndTimecode returns a boolean if a field has been set.
func (o *VideoClip) HasEndTimecode() bool {
	if o != nil && o.EndTimecode != nil {
		return true
	}

	return false
}

// SetEndTimecode gets a reference to the given string and assigns it to the EndTimecode field.
func (o *VideoClip) SetEndTimecode(v string) {
	o.EndTimecode = &v
}

type NullableVideoClip struct {
	value *VideoClip
	isSet bool
}

func (v NullableVideoClip) Get() *VideoClip {
	return v.value
}

func (v *NullableVideoClip) Set(val *VideoClip) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoClip) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoClip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoClip(val *VideoClip) *NullableVideoClip {
	return &NullableVideoClip{value: val, isSet: true}
}
