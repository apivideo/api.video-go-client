/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// VideoCreationPayload struct for VideoCreationPayload
type VideoCreationPayload struct {
	// The title of your new video.
	Title string `json:"title"`
	// A brief description of your video.
	Description *string `json:"description,omitempty"`
	// You can either add a video already on the web, by entering the URL of the video, or you can also enter the `videoId` of one of the videos you already have on your api.video acccount, and this will generate a copy of your video. Creating a copy of a video can be especially useful if you want to keep your original video and trim or apply a watermark onto the copy you would create.
	Source *string `json:"source,omitempty"`
	// Default: True. If set to `false` the video will become private. More information on private videos can be found [here](https://docs.api.video/delivery/video-privacy-access-management)
	Public *bool `json:"public,omitempty"`
	// Indicates if your video is a 360/immersive video.
	Panoramic *bool `json:"panoramic,omitempty"`
	// Enables mp4 version in addition to streamed version.
	Mp4Support *bool `json:"mp4Support,omitempty"`
	// The unique identification number for your video player.
	PlayerId *string `json:"playerId,omitempty"`
	// A list of tags you want to use to describe your video.
	Tags *[]string `json:"tags,omitempty"`
	// A list of key value pairs that you use to provide metadata for your video. These pairs can be made dynamic, allowing you to segment your audience. Read more on [dynamic metadata](https://api.video/blog/endpoints/dynamic-metadata/).
	Metadata  *[]Metadata     `json:"metadata,omitempty"`
	Clip      *VideoClip      `json:"clip,omitempty"`
	Watermark *VideoWatermark `json:"watermark,omitempty"`
}

// NewVideoCreationPayload instantiates a new VideoCreationPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoCreationPayload(title string) *VideoCreationPayload {
	this := VideoCreationPayload{}
	this.Title = title
	var public bool = true
	this.Public = &public
	var panoramic bool = false
	this.Panoramic = &panoramic
	var mp4Support bool = true
	this.Mp4Support = &mp4Support
	return &this
}

// NewVideoCreationPayloadWithDefaults instantiates a new VideoCreationPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoCreationPayloadWithDefaults() *VideoCreationPayload {
	this := VideoCreationPayload{}
	var public bool = true
	this.Public = &public
	var panoramic bool = false
	this.Panoramic = &panoramic
	var mp4Support bool = true
	this.Mp4Support = &mp4Support
	return &this
}

// GetTitle returns the Title field value
func (o *VideoCreationPayload) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *VideoCreationPayload) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VideoCreationPayload) SetDescription(v string) {
	o.Description = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *VideoCreationPayload) SetSource(v string) {
	o.Source = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *VideoCreationPayload) SetPublic(v bool) {
	o.Public = &v
}

// GetPanoramic returns the Panoramic field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetPanoramic() bool {
	if o == nil || o.Panoramic == nil {
		var ret bool
		return ret
	}
	return *o.Panoramic
}

// GetPanoramicOk returns a tuple with the Panoramic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetPanoramicOk() (*bool, bool) {
	if o == nil || o.Panoramic == nil {
		return nil, false
	}
	return o.Panoramic, true
}

// HasPanoramic returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasPanoramic() bool {
	if o != nil && o.Panoramic != nil {
		return true
	}

	return false
}

// SetPanoramic gets a reference to the given bool and assigns it to the Panoramic field.
func (o *VideoCreationPayload) SetPanoramic(v bool) {
	o.Panoramic = &v
}

// GetMp4Support returns the Mp4Support field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetMp4Support() bool {
	if o == nil || o.Mp4Support == nil {
		var ret bool
		return ret
	}
	return *o.Mp4Support
}

// GetMp4SupportOk returns a tuple with the Mp4Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetMp4SupportOk() (*bool, bool) {
	if o == nil || o.Mp4Support == nil {
		return nil, false
	}
	return o.Mp4Support, true
}

// HasMp4Support returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasMp4Support() bool {
	if o != nil && o.Mp4Support != nil {
		return true
	}

	return false
}

// SetMp4Support gets a reference to the given bool and assigns it to the Mp4Support field.
func (o *VideoCreationPayload) SetMp4Support(v bool) {
	o.Mp4Support = &v
}

// GetPlayerId returns the PlayerId field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetPlayerId() string {
	if o == nil || o.PlayerId == nil {
		var ret string
		return ret
	}
	return *o.PlayerId
}

// GetPlayerIdOk returns a tuple with the PlayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetPlayerIdOk() (*string, bool) {
	if o == nil || o.PlayerId == nil {
		return nil, false
	}
	return o.PlayerId, true
}

// HasPlayerId returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasPlayerId() bool {
	if o != nil && o.PlayerId != nil {
		return true
	}

	return false
}

// SetPlayerId gets a reference to the given string and assigns it to the PlayerId field.
func (o *VideoCreationPayload) SetPlayerId(v string) {
	o.PlayerId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *VideoCreationPayload) SetTags(v []string) {
	o.Tags = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetMetadata() []Metadata {
	if o == nil || o.Metadata == nil {
		var ret []Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetMetadataOk() (*[]Metadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []Metadata and assigns it to the Metadata field.
func (o *VideoCreationPayload) SetMetadata(v []Metadata) {
	o.Metadata = &v
}

// GetClip returns the Clip field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetClip() VideoClip {
	if o == nil || o.Clip == nil {
		var ret VideoClip
		return ret
	}
	return *o.Clip
}

// GetClipOk returns a tuple with the Clip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetClipOk() (*VideoClip, bool) {
	if o == nil || o.Clip == nil {
		return nil, false
	}
	return o.Clip, true
}

// HasClip returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasClip() bool {
	if o != nil && o.Clip != nil {
		return true
	}

	return false
}

// SetClip gets a reference to the given VideoClip and assigns it to the Clip field.
func (o *VideoCreationPayload) SetClip(v VideoClip) {
	o.Clip = &v
}

// GetWatermark returns the Watermark field value if set, zero value otherwise.
func (o *VideoCreationPayload) GetWatermark() VideoWatermark {
	if o == nil || o.Watermark == nil {
		var ret VideoWatermark
		return ret
	}
	return *o.Watermark
}

// GetWatermarkOk returns a tuple with the Watermark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoCreationPayload) GetWatermarkOk() (*VideoWatermark, bool) {
	if o == nil || o.Watermark == nil {
		return nil, false
	}
	return o.Watermark, true
}

// HasWatermark returns a boolean if a field has been set.
func (o *VideoCreationPayload) HasWatermark() bool {
	if o != nil && o.Watermark != nil {
		return true
	}

	return false
}

// SetWatermark gets a reference to the given VideoWatermark and assigns it to the Watermark field.
func (o *VideoCreationPayload) SetWatermark(v VideoWatermark) {
	o.Watermark = &v
}

type NullableVideoCreationPayload struct {
	value *VideoCreationPayload
	isSet bool
}

func (v NullableVideoCreationPayload) Get() *VideoCreationPayload {
	return v.value
}

func (v *NullableVideoCreationPayload) Set(val *VideoCreationPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoCreationPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoCreationPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoCreationPayload(val *VideoCreationPayload) *NullableVideoCreationPayload {
	return &NullableVideoCreationPayload{value: val, isSet: true}
}
