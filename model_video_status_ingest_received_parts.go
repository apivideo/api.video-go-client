/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// VideoStatusIngestReceivedParts struct for VideoStatusIngestReceivedParts
type VideoStatusIngestReceivedParts struct {
	// The parts that are have been uploaded, ordered. For example, if part 2 was sent before part 1, and both have been uploaded, the output will be [1, 2].
	Parts *[]int32 `json:"parts,omitempty"`
	// Contains the number of expected parts. The total will be listed as \"null\" until the total number of parts is known.
	Total *NullableInt32 `json:"total,omitempty"`
}

// NewVideoStatusIngestReceivedParts instantiates a new VideoStatusIngestReceivedParts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoStatusIngestReceivedParts() *VideoStatusIngestReceivedParts {
	this := VideoStatusIngestReceivedParts{}
	return &this
}

// NewVideoStatusIngestReceivedPartsWithDefaults instantiates a new VideoStatusIngestReceivedParts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoStatusIngestReceivedPartsWithDefaults() *VideoStatusIngestReceivedParts {
	this := VideoStatusIngestReceivedParts{}
	return &this
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *VideoStatusIngestReceivedParts) GetParts() []int32 {
	if o == nil || o.Parts == nil {
		var ret []int32
		return ret
	}
	return *o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoStatusIngestReceivedParts) GetPartsOk() (*[]int32, bool) {
	if o == nil || o.Parts == nil {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *VideoStatusIngestReceivedParts) HasParts() bool {
	if o != nil && o.Parts != nil {
		return true
	}

	return false
}

// SetParts gets a reference to the given []int32 and assigns it to the Parts field.
func (o *VideoStatusIngestReceivedParts) SetParts(v []int32) {
	o.Parts = &v
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VideoStatusIngestReceivedParts) GetTotal() int32 {
	if o == nil || o.Total.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoStatusIngestReceivedParts) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *VideoStatusIngestReceivedParts) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableInt32 and assigns it to the Total field.
func (o *VideoStatusIngestReceivedParts) SetTotal(v int32) {
	o.Total.Set(&v)
}

// SetTotalNil sets the value for Total to be an explicit nil
func (o *VideoStatusIngestReceivedParts) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *VideoStatusIngestReceivedParts) UnsetTotal() {
	o.Total.Unset()
}

type NullableVideoStatusIngestReceivedParts struct {
	value *VideoStatusIngestReceivedParts
	isSet bool
}

func (v NullableVideoStatusIngestReceivedParts) Get() *VideoStatusIngestReceivedParts {
	return v.value
}

func (v *NullableVideoStatusIngestReceivedParts) Set(val *VideoStatusIngestReceivedParts) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoStatusIngestReceivedParts) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoStatusIngestReceivedParts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoStatusIngestReceivedParts(val *VideoStatusIngestReceivedParts) *NullableVideoStatusIngestReceivedParts {
	return &NullableVideoStatusIngestReceivedParts{value: val, isSet: true}
}
