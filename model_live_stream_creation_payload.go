/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// LiveStreamCreationPayload struct for LiveStreamCreationPayload
type LiveStreamCreationPayload struct {
	// Add a name for your live stream here.
	Name string `json:"name"`
	// Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view. Learn more about the Private Video feature [here](https://docs.api.video/delivery-analytics/video-privacy-access-management).
	Public *bool `json:"public,omitempty"`
	// The unique identifier for the player.
	PlayerId *string `json:"playerId,omitempty"`
	// Use this parameter to add, edit, or remove RTMP services where you want to restream a live stream. The list can only contain up to 5 destinations.
	Restreams *[]RestreamsRequestObject `json:"restreams,omitempty"`
}

// NewLiveStreamCreationPayload instantiates a new LiveStreamCreationPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamCreationPayload(name string) *LiveStreamCreationPayload {
	this := LiveStreamCreationPayload{}
	this.Name = name
	return &this
}

// NewLiveStreamCreationPayloadWithDefaults instantiates a new LiveStreamCreationPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamCreationPayloadWithDefaults() *LiveStreamCreationPayload {
	this := LiveStreamCreationPayload{}
	return &this
}

// GetName returns the Name field value
func (o *LiveStreamCreationPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LiveStreamCreationPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LiveStreamCreationPayload) SetName(v string) {
	o.Name = v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *LiveStreamCreationPayload) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamCreationPayload) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *LiveStreamCreationPayload) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *LiveStreamCreationPayload) SetPublic(v bool) {
	o.Public = &v
}

// GetPlayerId returns the PlayerId field value if set, zero value otherwise.
func (o *LiveStreamCreationPayload) GetPlayerId() string {
	if o == nil || o.PlayerId == nil {
		var ret string
		return ret
	}
	return *o.PlayerId
}

// GetPlayerIdOk returns a tuple with the PlayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamCreationPayload) GetPlayerIdOk() (*string, bool) {
	if o == nil || o.PlayerId == nil {
		return nil, false
	}
	return o.PlayerId, true
}

// HasPlayerId returns a boolean if a field has been set.
func (o *LiveStreamCreationPayload) HasPlayerId() bool {
	if o != nil && o.PlayerId != nil {
		return true
	}

	return false
}

// SetPlayerId gets a reference to the given string and assigns it to the PlayerId field.
func (o *LiveStreamCreationPayload) SetPlayerId(v string) {
	o.PlayerId = &v
}

// GetRestreams returns the Restreams field value if set, zero value otherwise.
func (o *LiveStreamCreationPayload) GetRestreams() []RestreamsRequestObject {
	if o == nil || o.Restreams == nil {
		var ret []RestreamsRequestObject
		return ret
	}
	return *o.Restreams
}

// GetRestreamsOk returns a tuple with the Restreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamCreationPayload) GetRestreamsOk() (*[]RestreamsRequestObject, bool) {
	if o == nil || o.Restreams == nil {
		return nil, false
	}
	return o.Restreams, true
}

// HasRestreams returns a boolean if a field has been set.
func (o *LiveStreamCreationPayload) HasRestreams() bool {
	if o != nil && o.Restreams != nil {
		return true
	}

	return false
}

// SetRestreams gets a reference to the given []RestreamsRequestObject and assigns it to the Restreams field.
func (o *LiveStreamCreationPayload) SetRestreams(v []RestreamsRequestObject) {
	o.Restreams = &v
}

type NullableLiveStreamCreationPayload struct {
	value *LiveStreamCreationPayload
	isSet bool
}

func (v NullableLiveStreamCreationPayload) Get() *LiveStreamCreationPayload {
	return v.value
}

func (v *NullableLiveStreamCreationPayload) Set(val *LiveStreamCreationPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamCreationPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamCreationPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamCreationPayload(val *LiveStreamCreationPayload) *NullableLiveStreamCreationPayload {
	return &NullableLiveStreamCreationPayload{value: val, isSet: true}
}
