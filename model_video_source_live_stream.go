/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// VideoSourceLiveStream This appears if the video is from a Live Record.
type VideoSourceLiveStream struct {
	// The unique identifier for the live stream.
	LiveStreamId *string                      `json:"liveStreamId,omitempty"`
	Links        *[]VideoSourceLiveStreamLink `json:"links,omitempty"`
}

// NewVideoSourceLiveStream instantiates a new VideoSourceLiveStream object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoSourceLiveStream() *VideoSourceLiveStream {
	this := VideoSourceLiveStream{}
	return &this
}

// NewVideoSourceLiveStreamWithDefaults instantiates a new VideoSourceLiveStream object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoSourceLiveStreamWithDefaults() *VideoSourceLiveStream {
	this := VideoSourceLiveStream{}
	return &this
}

// GetLiveStreamId returns the LiveStreamId field value if set, zero value otherwise.
func (o *VideoSourceLiveStream) GetLiveStreamId() string {
	if o == nil || o.LiveStreamId == nil {
		var ret string
		return ret
	}
	return *o.LiveStreamId
}

// GetLiveStreamIdOk returns a tuple with the LiveStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSourceLiveStream) GetLiveStreamIdOk() (*string, bool) {
	if o == nil || o.LiveStreamId == nil {
		return nil, false
	}
	return o.LiveStreamId, true
}

// HasLiveStreamId returns a boolean if a field has been set.
func (o *VideoSourceLiveStream) HasLiveStreamId() bool {
	if o != nil && o.LiveStreamId != nil {
		return true
	}

	return false
}

// SetLiveStreamId gets a reference to the given string and assigns it to the LiveStreamId field.
func (o *VideoSourceLiveStream) SetLiveStreamId(v string) {
	o.LiveStreamId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *VideoSourceLiveStream) GetLinks() []VideoSourceLiveStreamLink {
	if o == nil || o.Links == nil {
		var ret []VideoSourceLiveStreamLink
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSourceLiveStream) GetLinksOk() (*[]VideoSourceLiveStreamLink, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *VideoSourceLiveStream) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []VideoSourceLiveStreamLink and assigns it to the Links field.
func (o *VideoSourceLiveStream) SetLinks(v []VideoSourceLiveStreamLink) {
	o.Links = &v
}

type NullableVideoSourceLiveStream struct {
	value *VideoSourceLiveStream
	isSet bool
}

func (v NullableVideoSourceLiveStream) Get() *VideoSourceLiveStream {
	return v.value
}

func (v *NullableVideoSourceLiveStream) Set(val *VideoSourceLiveStream) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoSourceLiveStream) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoSourceLiveStream) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoSourceLiveStream(val *VideoSourceLiveStream) *NullableVideoSourceLiveStream {
	return &NullableVideoSourceLiveStream{value: val, isSet: true}
}
