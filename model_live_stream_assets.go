/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// LiveStreamAssets struct for LiveStreamAssets
type LiveStreamAssets struct {
	// The http live streaming (HLS) link for your live video stream.
	Hls *string `json:"hls,omitempty"`
	// The embed code for the iframe containing your live video stream.
	Iframe *string `json:"iframe,omitempty"`
	// A link to the video player that is playing your live stream.
	Player *string `json:"player,omitempty"`
	// A link to the thumbnail for your video.
	Thumbnail *string `json:"thumbnail,omitempty"`
}

// NewLiveStreamAssets instantiates a new LiveStreamAssets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamAssets() *LiveStreamAssets {
	this := LiveStreamAssets{}
	return &this
}

// NewLiveStreamAssetsWithDefaults instantiates a new LiveStreamAssets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamAssetsWithDefaults() *LiveStreamAssets {
	this := LiveStreamAssets{}
	return &this
}

// GetHls returns the Hls field value if set, zero value otherwise.
func (o *LiveStreamAssets) GetHls() string {
	if o == nil || o.Hls == nil {
		var ret string
		return ret
	}
	return *o.Hls
}

// GetHlsOk returns a tuple with the Hls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAssets) GetHlsOk() (*string, bool) {
	if o == nil || o.Hls == nil {
		return nil, false
	}
	return o.Hls, true
}

// HasHls returns a boolean if a field has been set.
func (o *LiveStreamAssets) HasHls() bool {
	if o != nil && o.Hls != nil {
		return true
	}

	return false
}

// SetHls gets a reference to the given string and assigns it to the Hls field.
func (o *LiveStreamAssets) SetHls(v string) {
	o.Hls = &v
}

// GetIframe returns the Iframe field value if set, zero value otherwise.
func (o *LiveStreamAssets) GetIframe() string {
	if o == nil || o.Iframe == nil {
		var ret string
		return ret
	}
	return *o.Iframe
}

// GetIframeOk returns a tuple with the Iframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAssets) GetIframeOk() (*string, bool) {
	if o == nil || o.Iframe == nil {
		return nil, false
	}
	return o.Iframe, true
}

// HasIframe returns a boolean if a field has been set.
func (o *LiveStreamAssets) HasIframe() bool {
	if o != nil && o.Iframe != nil {
		return true
	}

	return false
}

// SetIframe gets a reference to the given string and assigns it to the Iframe field.
func (o *LiveStreamAssets) SetIframe(v string) {
	o.Iframe = &v
}

// GetPlayer returns the Player field value if set, zero value otherwise.
func (o *LiveStreamAssets) GetPlayer() string {
	if o == nil || o.Player == nil {
		var ret string
		return ret
	}
	return *o.Player
}

// GetPlayerOk returns a tuple with the Player field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAssets) GetPlayerOk() (*string, bool) {
	if o == nil || o.Player == nil {
		return nil, false
	}
	return o.Player, true
}

// HasPlayer returns a boolean if a field has been set.
func (o *LiveStreamAssets) HasPlayer() bool {
	if o != nil && o.Player != nil {
		return true
	}

	return false
}

// SetPlayer gets a reference to the given string and assigns it to the Player field.
func (o *LiveStreamAssets) SetPlayer(v string) {
	o.Player = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *LiveStreamAssets) GetThumbnail() string {
	if o == nil || o.Thumbnail == nil {
		var ret string
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAssets) GetThumbnailOk() (*string, bool) {
	if o == nil || o.Thumbnail == nil {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *LiveStreamAssets) HasThumbnail() bool {
	if o != nil && o.Thumbnail != nil {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given string and assigns it to the Thumbnail field.
func (o *LiveStreamAssets) SetThumbnail(v string) {
	o.Thumbnail = &v
}

type NullableLiveStreamAssets struct {
	value *LiveStreamAssets
	isSet bool
}

func (v NullableLiveStreamAssets) Get() *LiveStreamAssets {
	return v.value
}

func (v *NullableLiveStreamAssets) Set(val *LiveStreamAssets) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamAssets) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamAssets(val *LiveStreamAssets) *NullableLiveStreamAssets {
	return &NullableLiveStreamAssets{value: val, isSet: true}
}
