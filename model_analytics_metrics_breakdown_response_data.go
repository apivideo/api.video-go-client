/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// AnalyticsMetricsBreakdownResponseData struct for AnalyticsMetricsBreakdownResponseData
type AnalyticsMetricsBreakdownResponseData struct {
	// Returns a specific value for the dimension you selected, based on the data. For example if you select `continent` as a dimension, then `dimensionValue` returns values like `EU` or \"AZ\".
	DimensionValue *string `json:"dimensionValue,omitempty"`
	// Returns the data for a specific dimension value.
	MetricValue *float32 `json:"metricValue,omitempty"`
}

// NewAnalyticsMetricsBreakdownResponseData instantiates a new AnalyticsMetricsBreakdownResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsMetricsBreakdownResponseData() *AnalyticsMetricsBreakdownResponseData {
	this := AnalyticsMetricsBreakdownResponseData{}
	return &this
}

// NewAnalyticsMetricsBreakdownResponseDataWithDefaults instantiates a new AnalyticsMetricsBreakdownResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsMetricsBreakdownResponseDataWithDefaults() *AnalyticsMetricsBreakdownResponseData {
	this := AnalyticsMetricsBreakdownResponseData{}
	return &this
}

// GetDimensionValue returns the DimensionValue field value if set, zero value otherwise.
func (o *AnalyticsMetricsBreakdownResponseData) GetDimensionValue() string {
	if o == nil || o.DimensionValue == nil {
		var ret string
		return ret
	}
	return *o.DimensionValue
}

// GetDimensionValueOk returns a tuple with the DimensionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsBreakdownResponseData) GetDimensionValueOk() (*string, bool) {
	if o == nil || o.DimensionValue == nil {
		return nil, false
	}
	return o.DimensionValue, true
}

// HasDimensionValue returns a boolean if a field has been set.
func (o *AnalyticsMetricsBreakdownResponseData) HasDimensionValue() bool {
	if o != nil && o.DimensionValue != nil {
		return true
	}

	return false
}

// SetDimensionValue gets a reference to the given string and assigns it to the DimensionValue field.
func (o *AnalyticsMetricsBreakdownResponseData) SetDimensionValue(v string) {
	o.DimensionValue = &v
}

// GetMetricValue returns the MetricValue field value if set, zero value otherwise.
func (o *AnalyticsMetricsBreakdownResponseData) GetMetricValue() float32 {
	if o == nil || o.MetricValue == nil {
		var ret float32
		return ret
	}
	return *o.MetricValue
}

// GetMetricValueOk returns a tuple with the MetricValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsBreakdownResponseData) GetMetricValueOk() (*float32, bool) {
	if o == nil || o.MetricValue == nil {
		return nil, false
	}
	return o.MetricValue, true
}

// HasMetricValue returns a boolean if a field has been set.
func (o *AnalyticsMetricsBreakdownResponseData) HasMetricValue() bool {
	if o != nil && o.MetricValue != nil {
		return true
	}

	return false
}

// SetMetricValue gets a reference to the given float32 and assigns it to the MetricValue field.
func (o *AnalyticsMetricsBreakdownResponseData) SetMetricValue(v float32) {
	o.MetricValue = &v
}

type NullableAnalyticsMetricsBreakdownResponseData struct {
	value *AnalyticsMetricsBreakdownResponseData
	isSet bool
}

func (v NullableAnalyticsMetricsBreakdownResponseData) Get() *AnalyticsMetricsBreakdownResponseData {
	return v.value
}

func (v *NullableAnalyticsMetricsBreakdownResponseData) Set(val *AnalyticsMetricsBreakdownResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsMetricsBreakdownResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsMetricsBreakdownResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsMetricsBreakdownResponseData(val *AnalyticsMetricsBreakdownResponseData) *NullableAnalyticsMetricsBreakdownResponseData {
	return &NullableAnalyticsMetricsBreakdownResponseData{value: val, isSet: true}
}
