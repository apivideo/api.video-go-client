/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// Pagination struct for Pagination
type Pagination struct {
	// Total number of items that exist.
	ItemsTotal *int32 `json:"itemsTotal,omitempty"`
	// Number of items listed in the current page.
	PagesTotal *int32 `json:"pagesTotal,omitempty"`
	// Maximum number of item per page.
	PageSize *int32 `json:"pageSize,omitempty"`
	// The current page index.
	CurrentPage *int32 `json:"currentPage,omitempty"`
	// The number of items on the current page.
	CurrentPageItems *int32           `json:"currentPageItems,omitempty"`
	Links            []PaginationLink `json:"links"`
}

// NewPagination instantiates a new Pagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagination(links []PaginationLink) *Pagination {
	this := Pagination{}
	this.Links = links
	return &this
}

// NewPaginationWithDefaults instantiates a new Pagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationWithDefaults() *Pagination {
	this := Pagination{}
	return &this
}

// GetItemsTotal returns the ItemsTotal field value if set, zero value otherwise.
func (o *Pagination) GetItemsTotal() int32 {
	if o == nil || o.ItemsTotal == nil {
		var ret int32
		return ret
	}
	return *o.ItemsTotal
}

// GetItemsTotalOk returns a tuple with the ItemsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetItemsTotalOk() (*int32, bool) {
	if o == nil || o.ItemsTotal == nil {
		return nil, false
	}
	return o.ItemsTotal, true
}

// HasItemsTotal returns a boolean if a field has been set.
func (o *Pagination) HasItemsTotal() bool {
	if o != nil && o.ItemsTotal != nil {
		return true
	}

	return false
}

// SetItemsTotal gets a reference to the given int32 and assigns it to the ItemsTotal field.
func (o *Pagination) SetItemsTotal(v int32) {
	o.ItemsTotal = &v
}

// GetPagesTotal returns the PagesTotal field value if set, zero value otherwise.
func (o *Pagination) GetPagesTotal() int32 {
	if o == nil || o.PagesTotal == nil {
		var ret int32
		return ret
	}
	return *o.PagesTotal
}

// GetPagesTotalOk returns a tuple with the PagesTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetPagesTotalOk() (*int32, bool) {
	if o == nil || o.PagesTotal == nil {
		return nil, false
	}
	return o.PagesTotal, true
}

// HasPagesTotal returns a boolean if a field has been set.
func (o *Pagination) HasPagesTotal() bool {
	if o != nil && o.PagesTotal != nil {
		return true
	}

	return false
}

// SetPagesTotal gets a reference to the given int32 and assigns it to the PagesTotal field.
func (o *Pagination) SetPagesTotal(v int32) {
	o.PagesTotal = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *Pagination) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *Pagination) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *Pagination) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *Pagination) GetCurrentPage() int32 {
	if o == nil || o.CurrentPage == nil {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetCurrentPageOk() (*int32, bool) {
	if o == nil || o.CurrentPage == nil {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *Pagination) HasCurrentPage() bool {
	if o != nil && o.CurrentPage != nil {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *Pagination) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

// GetCurrentPageItems returns the CurrentPageItems field value if set, zero value otherwise.
func (o *Pagination) GetCurrentPageItems() int32 {
	if o == nil || o.CurrentPageItems == nil {
		var ret int32
		return ret
	}
	return *o.CurrentPageItems
}

// GetCurrentPageItemsOk returns a tuple with the CurrentPageItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetCurrentPageItemsOk() (*int32, bool) {
	if o == nil || o.CurrentPageItems == nil {
		return nil, false
	}
	return o.CurrentPageItems, true
}

// HasCurrentPageItems returns a boolean if a field has been set.
func (o *Pagination) HasCurrentPageItems() bool {
	if o != nil && o.CurrentPageItems != nil {
		return true
	}

	return false
}

// SetCurrentPageItems gets a reference to the given int32 and assigns it to the CurrentPageItems field.
func (o *Pagination) SetCurrentPageItems(v int32) {
	o.CurrentPageItems = &v
}

// GetLinks returns the Links field value
func (o *Pagination) GetLinks() []PaginationLink {
	if o == nil {
		var ret []PaginationLink
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Pagination) GetLinksOk() (*[]PaginationLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Pagination) SetLinks(v []PaginationLink) {
	o.Links = v
}

type NullablePagination struct {
	value *Pagination
	isSet bool
}

func (v NullablePagination) Get() *Pagination {
	return v.value
}

func (v *NullablePagination) Set(val *Pagination) {
	v.value = val
	v.isSet = true
}

func (v NullablePagination) IsSet() bool {
	return v.isSet
}

func (v *NullablePagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagination(val *Pagination) *NullablePagination {
	return &NullablePagination{value: val, isSet: true}
}
