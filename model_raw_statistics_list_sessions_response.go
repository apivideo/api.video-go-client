/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// RawStatisticsListSessionsResponse struct for RawStatisticsListSessionsResponse
type RawStatisticsListSessionsResponse struct {
	Data       *[]VideoSession `json:"data,omitempty"`
	Pagination *Pagination     `json:"pagination,omitempty"`
}

// NewRawStatisticsListSessionsResponse instantiates a new RawStatisticsListSessionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawStatisticsListSessionsResponse() *RawStatisticsListSessionsResponse {
	this := RawStatisticsListSessionsResponse{}
	return &this
}

// NewRawStatisticsListSessionsResponseWithDefaults instantiates a new RawStatisticsListSessionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawStatisticsListSessionsResponseWithDefaults() *RawStatisticsListSessionsResponse {
	this := RawStatisticsListSessionsResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *RawStatisticsListSessionsResponse) GetData() []VideoSession {
	if o == nil || o.Data == nil {
		var ret []VideoSession
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RawStatisticsListSessionsResponse) GetDataOk() (*[]VideoSession, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *RawStatisticsListSessionsResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []VideoSession and assigns it to the Data field.
func (o *RawStatisticsListSessionsResponse) SetData(v []VideoSession) {
	o.Data = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *RawStatisticsListSessionsResponse) GetPagination() Pagination {
	if o == nil || o.Pagination == nil {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RawStatisticsListSessionsResponse) GetPaginationOk() (*Pagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *RawStatisticsListSessionsResponse) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *RawStatisticsListSessionsResponse) SetPagination(v Pagination) {
	o.Pagination = &v
}

type NullableRawStatisticsListSessionsResponse struct {
	value *RawStatisticsListSessionsResponse
	isSet bool
}

func (v NullableRawStatisticsListSessionsResponse) Get() *RawStatisticsListSessionsResponse {
	return v.value
}

func (v *NullableRawStatisticsListSessionsResponse) Set(val *RawStatisticsListSessionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRawStatisticsListSessionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRawStatisticsListSessionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawStatisticsListSessionsResponse(val *RawStatisticsListSessionsResponse) *NullableRawStatisticsListSessionsResponse {
	return &NullableRawStatisticsListSessionsResponse{value: val, isSet: true}
}
