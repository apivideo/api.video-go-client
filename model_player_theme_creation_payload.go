/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// PlayerThemeCreationPayload struct for PlayerThemeCreationPayload
type PlayerThemeCreationPayload struct {
	// Add a name for your player theme here.
	Name *string `json:"name,omitempty"`
	// RGBA color for timer text. Default: rgba(255, 255, 255, 1)
	Text *string `json:"text,omitempty"`
	// RGBA color for all controls. Default: rgba(255, 255, 255, 1)
	Link *string `json:"link,omitempty"`
	// RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)
	LinkHover *string `json:"linkHover,omitempty"`
	// RGBA color for the play button when hovered.
	LinkActive *string `json:"linkActive,omitempty"`
	// RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)
	TrackPlayed *string `json:"trackPlayed,omitempty"`
	// RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)
	TrackUnplayed *string `json:"trackUnplayed,omitempty"`
	// RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)
	TrackBackground *string `json:"trackBackground,omitempty"`
	// RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)
	BackgroundTop *string `json:"backgroundTop,omitempty"`
	// RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)
	BackgroundBottom *string `json:"backgroundBottom,omitempty"`
	// RGBA color for title text. Default: rgba(255, 255, 255, 1)
	BackgroundText *string `json:"backgroundText,omitempty"`
	// enable/disable player SDK access. Default: true
	EnableApi *bool `json:"enableApi,omitempty"`
	// enable/disable player controls. Default: true
	EnableControls *bool `json:"enableControls,omitempty"`
	// enable/disable player autoplay. Default: false
	ForceAutoplay *bool `json:"forceAutoplay,omitempty"`
	// enable/disable title. Default: false
	HideTitle *bool `json:"hideTitle,omitempty"`
	// enable/disable looping. Default: false
	ForceLoop *bool `json:"forceLoop,omitempty"`
}

// NewPlayerThemeCreationPayload instantiates a new PlayerThemeCreationPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayerThemeCreationPayload() *PlayerThemeCreationPayload {
	this := PlayerThemeCreationPayload{}
	var enableApi bool = true
	this.EnableApi = &enableApi
	var enableControls bool = true
	this.EnableControls = &enableControls
	var forceAutoplay bool = false
	this.ForceAutoplay = &forceAutoplay
	var hideTitle bool = false
	this.HideTitle = &hideTitle
	var forceLoop bool = false
	this.ForceLoop = &forceLoop
	return &this
}

// NewPlayerThemeCreationPayloadWithDefaults instantiates a new PlayerThemeCreationPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayerThemeCreationPayloadWithDefaults() *PlayerThemeCreationPayload {
	this := PlayerThemeCreationPayload{}
	var enableApi bool = true
	this.EnableApi = &enableApi
	var enableControls bool = true
	this.EnableControls = &enableControls
	var forceAutoplay bool = false
	this.ForceAutoplay = &forceAutoplay
	var hideTitle bool = false
	this.HideTitle = &hideTitle
	var forceLoop bool = false
	this.ForceLoop = &forceLoop
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PlayerThemeCreationPayload) SetName(v string) {
	o.Name = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *PlayerThemeCreationPayload) SetText(v string) {
	o.Text = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *PlayerThemeCreationPayload) SetLink(v string) {
	o.Link = &v
}

// GetLinkHover returns the LinkHover field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetLinkHover() string {
	if o == nil || o.LinkHover == nil {
		var ret string
		return ret
	}
	return *o.LinkHover
}

// GetLinkHoverOk returns a tuple with the LinkHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetLinkHoverOk() (*string, bool) {
	if o == nil || o.LinkHover == nil {
		return nil, false
	}
	return o.LinkHover, true
}

// HasLinkHover returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasLinkHover() bool {
	if o != nil && o.LinkHover != nil {
		return true
	}

	return false
}

// SetLinkHover gets a reference to the given string and assigns it to the LinkHover field.
func (o *PlayerThemeCreationPayload) SetLinkHover(v string) {
	o.LinkHover = &v
}

// GetLinkActive returns the LinkActive field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetLinkActive() string {
	if o == nil || o.LinkActive == nil {
		var ret string
		return ret
	}
	return *o.LinkActive
}

// GetLinkActiveOk returns a tuple with the LinkActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetLinkActiveOk() (*string, bool) {
	if o == nil || o.LinkActive == nil {
		return nil, false
	}
	return o.LinkActive, true
}

// HasLinkActive returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasLinkActive() bool {
	if o != nil && o.LinkActive != nil {
		return true
	}

	return false
}

// SetLinkActive gets a reference to the given string and assigns it to the LinkActive field.
func (o *PlayerThemeCreationPayload) SetLinkActive(v string) {
	o.LinkActive = &v
}

// GetTrackPlayed returns the TrackPlayed field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetTrackPlayed() string {
	if o == nil || o.TrackPlayed == nil {
		var ret string
		return ret
	}
	return *o.TrackPlayed
}

// GetTrackPlayedOk returns a tuple with the TrackPlayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetTrackPlayedOk() (*string, bool) {
	if o == nil || o.TrackPlayed == nil {
		return nil, false
	}
	return o.TrackPlayed, true
}

// HasTrackPlayed returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasTrackPlayed() bool {
	if o != nil && o.TrackPlayed != nil {
		return true
	}

	return false
}

// SetTrackPlayed gets a reference to the given string and assigns it to the TrackPlayed field.
func (o *PlayerThemeCreationPayload) SetTrackPlayed(v string) {
	o.TrackPlayed = &v
}

// GetTrackUnplayed returns the TrackUnplayed field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetTrackUnplayed() string {
	if o == nil || o.TrackUnplayed == nil {
		var ret string
		return ret
	}
	return *o.TrackUnplayed
}

// GetTrackUnplayedOk returns a tuple with the TrackUnplayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetTrackUnplayedOk() (*string, bool) {
	if o == nil || o.TrackUnplayed == nil {
		return nil, false
	}
	return o.TrackUnplayed, true
}

// HasTrackUnplayed returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasTrackUnplayed() bool {
	if o != nil && o.TrackUnplayed != nil {
		return true
	}

	return false
}

// SetTrackUnplayed gets a reference to the given string and assigns it to the TrackUnplayed field.
func (o *PlayerThemeCreationPayload) SetTrackUnplayed(v string) {
	o.TrackUnplayed = &v
}

// GetTrackBackground returns the TrackBackground field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetTrackBackground() string {
	if o == nil || o.TrackBackground == nil {
		var ret string
		return ret
	}
	return *o.TrackBackground
}

// GetTrackBackgroundOk returns a tuple with the TrackBackground field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetTrackBackgroundOk() (*string, bool) {
	if o == nil || o.TrackBackground == nil {
		return nil, false
	}
	return o.TrackBackground, true
}

// HasTrackBackground returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasTrackBackground() bool {
	if o != nil && o.TrackBackground != nil {
		return true
	}

	return false
}

// SetTrackBackground gets a reference to the given string and assigns it to the TrackBackground field.
func (o *PlayerThemeCreationPayload) SetTrackBackground(v string) {
	o.TrackBackground = &v
}

// GetBackgroundTop returns the BackgroundTop field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetBackgroundTop() string {
	if o == nil || o.BackgroundTop == nil {
		var ret string
		return ret
	}
	return *o.BackgroundTop
}

// GetBackgroundTopOk returns a tuple with the BackgroundTop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetBackgroundTopOk() (*string, bool) {
	if o == nil || o.BackgroundTop == nil {
		return nil, false
	}
	return o.BackgroundTop, true
}

// HasBackgroundTop returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasBackgroundTop() bool {
	if o != nil && o.BackgroundTop != nil {
		return true
	}

	return false
}

// SetBackgroundTop gets a reference to the given string and assigns it to the BackgroundTop field.
func (o *PlayerThemeCreationPayload) SetBackgroundTop(v string) {
	o.BackgroundTop = &v
}

// GetBackgroundBottom returns the BackgroundBottom field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetBackgroundBottom() string {
	if o == nil || o.BackgroundBottom == nil {
		var ret string
		return ret
	}
	return *o.BackgroundBottom
}

// GetBackgroundBottomOk returns a tuple with the BackgroundBottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetBackgroundBottomOk() (*string, bool) {
	if o == nil || o.BackgroundBottom == nil {
		return nil, false
	}
	return o.BackgroundBottom, true
}

// HasBackgroundBottom returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasBackgroundBottom() bool {
	if o != nil && o.BackgroundBottom != nil {
		return true
	}

	return false
}

// SetBackgroundBottom gets a reference to the given string and assigns it to the BackgroundBottom field.
func (o *PlayerThemeCreationPayload) SetBackgroundBottom(v string) {
	o.BackgroundBottom = &v
}

// GetBackgroundText returns the BackgroundText field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetBackgroundText() string {
	if o == nil || o.BackgroundText == nil {
		var ret string
		return ret
	}
	return *o.BackgroundText
}

// GetBackgroundTextOk returns a tuple with the BackgroundText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetBackgroundTextOk() (*string, bool) {
	if o == nil || o.BackgroundText == nil {
		return nil, false
	}
	return o.BackgroundText, true
}

// HasBackgroundText returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasBackgroundText() bool {
	if o != nil && o.BackgroundText != nil {
		return true
	}

	return false
}

// SetBackgroundText gets a reference to the given string and assigns it to the BackgroundText field.
func (o *PlayerThemeCreationPayload) SetBackgroundText(v string) {
	o.BackgroundText = &v
}

// GetEnableApi returns the EnableApi field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetEnableApi() bool {
	if o == nil || o.EnableApi == nil {
		var ret bool
		return ret
	}
	return *o.EnableApi
}

// GetEnableApiOk returns a tuple with the EnableApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetEnableApiOk() (*bool, bool) {
	if o == nil || o.EnableApi == nil {
		return nil, false
	}
	return o.EnableApi, true
}

// HasEnableApi returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasEnableApi() bool {
	if o != nil && o.EnableApi != nil {
		return true
	}

	return false
}

// SetEnableApi gets a reference to the given bool and assigns it to the EnableApi field.
func (o *PlayerThemeCreationPayload) SetEnableApi(v bool) {
	o.EnableApi = &v
}

// GetEnableControls returns the EnableControls field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetEnableControls() bool {
	if o == nil || o.EnableControls == nil {
		var ret bool
		return ret
	}
	return *o.EnableControls
}

// GetEnableControlsOk returns a tuple with the EnableControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetEnableControlsOk() (*bool, bool) {
	if o == nil || o.EnableControls == nil {
		return nil, false
	}
	return o.EnableControls, true
}

// HasEnableControls returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasEnableControls() bool {
	if o != nil && o.EnableControls != nil {
		return true
	}

	return false
}

// SetEnableControls gets a reference to the given bool and assigns it to the EnableControls field.
func (o *PlayerThemeCreationPayload) SetEnableControls(v bool) {
	o.EnableControls = &v
}

// GetForceAutoplay returns the ForceAutoplay field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetForceAutoplay() bool {
	if o == nil || o.ForceAutoplay == nil {
		var ret bool
		return ret
	}
	return *o.ForceAutoplay
}

// GetForceAutoplayOk returns a tuple with the ForceAutoplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetForceAutoplayOk() (*bool, bool) {
	if o == nil || o.ForceAutoplay == nil {
		return nil, false
	}
	return o.ForceAutoplay, true
}

// HasForceAutoplay returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasForceAutoplay() bool {
	if o != nil && o.ForceAutoplay != nil {
		return true
	}

	return false
}

// SetForceAutoplay gets a reference to the given bool and assigns it to the ForceAutoplay field.
func (o *PlayerThemeCreationPayload) SetForceAutoplay(v bool) {
	o.ForceAutoplay = &v
}

// GetHideTitle returns the HideTitle field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetHideTitle() bool {
	if o == nil || o.HideTitle == nil {
		var ret bool
		return ret
	}
	return *o.HideTitle
}

// GetHideTitleOk returns a tuple with the HideTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetHideTitleOk() (*bool, bool) {
	if o == nil || o.HideTitle == nil {
		return nil, false
	}
	return o.HideTitle, true
}

// HasHideTitle returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasHideTitle() bool {
	if o != nil && o.HideTitle != nil {
		return true
	}

	return false
}

// SetHideTitle gets a reference to the given bool and assigns it to the HideTitle field.
func (o *PlayerThemeCreationPayload) SetHideTitle(v bool) {
	o.HideTitle = &v
}

// GetForceLoop returns the ForceLoop field value if set, zero value otherwise.
func (o *PlayerThemeCreationPayload) GetForceLoop() bool {
	if o == nil || o.ForceLoop == nil {
		var ret bool
		return ret
	}
	return *o.ForceLoop
}

// GetForceLoopOk returns a tuple with the ForceLoop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeCreationPayload) GetForceLoopOk() (*bool, bool) {
	if o == nil || o.ForceLoop == nil {
		return nil, false
	}
	return o.ForceLoop, true
}

// HasForceLoop returns a boolean if a field has been set.
func (o *PlayerThemeCreationPayload) HasForceLoop() bool {
	if o != nil && o.ForceLoop != nil {
		return true
	}

	return false
}

// SetForceLoop gets a reference to the given bool and assigns it to the ForceLoop field.
func (o *PlayerThemeCreationPayload) SetForceLoop(v bool) {
	o.ForceLoop = &v
}

type NullablePlayerThemeCreationPayload struct {
	value *PlayerThemeCreationPayload
	isSet bool
}

func (v NullablePlayerThemeCreationPayload) Get() *PlayerThemeCreationPayload {
	return v.value
}

func (v *NullablePlayerThemeCreationPayload) Set(val *PlayerThemeCreationPayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayerThemeCreationPayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayerThemeCreationPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayerThemeCreationPayload(val *PlayerThemeCreationPayload) *NullablePlayerThemeCreationPayload {
	return &NullablePlayerThemeCreationPayload{value: val, isSet: true}
}
