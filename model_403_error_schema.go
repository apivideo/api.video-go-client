/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// Model403ErrorSchema struct for Model403ErrorSchema
type Model403ErrorSchema struct {
	// A link to the error documentation.
	Type *string `json:"type,omitempty"`
	// A description of the error that occurred.
	Title *string `json:"title,omitempty"`
	// The name of the parameter that caused the error.
	Name *NullableString `json:"name,omitempty"`
	// The HTTP status code.
	Status *int32 `json:"status,omitempty"`
}

// NewModel403ErrorSchema instantiates a new Model403ErrorSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModel403ErrorSchema() *Model403ErrorSchema {
	this := Model403ErrorSchema{}
	return &this
}

// NewModel403ErrorSchemaWithDefaults instantiates a new Model403ErrorSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModel403ErrorSchemaWithDefaults() *Model403ErrorSchema {
	this := Model403ErrorSchema{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Model403ErrorSchema) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model403ErrorSchema) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Model403ErrorSchema) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Model403ErrorSchema) SetType(v string) {
	o.Type = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Model403ErrorSchema) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model403ErrorSchema) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Model403ErrorSchema) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Model403ErrorSchema) SetTitle(v string) {
	o.Title = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Model403ErrorSchema) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Model403ErrorSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Model403ErrorSchema) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Model403ErrorSchema) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *Model403ErrorSchema) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Model403ErrorSchema) UnsetName() {
	o.Name.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Model403ErrorSchema) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model403ErrorSchema) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Model403ErrorSchema) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *Model403ErrorSchema) SetStatus(v int32) {
	o.Status = &v
}

type NullableModel403ErrorSchema struct {
	value *Model403ErrorSchema
	isSet bool
}

func (v NullableModel403ErrorSchema) Get() *Model403ErrorSchema {
	return v.value
}

func (v *NullableModel403ErrorSchema) Set(val *Model403ErrorSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableModel403ErrorSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableModel403ErrorSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModel403ErrorSchema(val *Model403ErrorSchema) *NullableModel403ErrorSchema {
	return &NullableModel403ErrorSchema{value: val, isSet: true}
}
