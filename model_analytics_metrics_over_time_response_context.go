/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// AnalyticsMetricsOverTimeResponseContext struct for AnalyticsMetricsOverTimeResponseContext
type AnalyticsMetricsOverTimeResponseContext struct {
	// Returns the metric you selected.
	Metric *string `json:"metric,omitempty"`
	// Returns the interval you selected.
	Interval  *string                                             `json:"interval,omitempty"`
	Timeframe *AnalyticsAggregatedMetricsResponseContextTimeframe `json:"timeframe,omitempty"`
}

// NewAnalyticsMetricsOverTimeResponseContext instantiates a new AnalyticsMetricsOverTimeResponseContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsMetricsOverTimeResponseContext() *AnalyticsMetricsOverTimeResponseContext {
	this := AnalyticsMetricsOverTimeResponseContext{}
	return &this
}

// NewAnalyticsMetricsOverTimeResponseContextWithDefaults instantiates a new AnalyticsMetricsOverTimeResponseContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsMetricsOverTimeResponseContextWithDefaults() *AnalyticsMetricsOverTimeResponseContext {
	this := AnalyticsMetricsOverTimeResponseContext{}
	return &this
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *AnalyticsMetricsOverTimeResponseContext) GetMetric() string {
	if o == nil || o.Metric == nil {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsOverTimeResponseContext) GetMetricOk() (*string, bool) {
	if o == nil || o.Metric == nil {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *AnalyticsMetricsOverTimeResponseContext) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *AnalyticsMetricsOverTimeResponseContext) SetMetric(v string) {
	o.Metric = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *AnalyticsMetricsOverTimeResponseContext) GetInterval() string {
	if o == nil || o.Interval == nil {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsOverTimeResponseContext) GetIntervalOk() (*string, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *AnalyticsMetricsOverTimeResponseContext) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *AnalyticsMetricsOverTimeResponseContext) SetInterval(v string) {
	o.Interval = &v
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise.
func (o *AnalyticsMetricsOverTimeResponseContext) GetTimeframe() AnalyticsAggregatedMetricsResponseContextTimeframe {
	if o == nil || o.Timeframe == nil {
		var ret AnalyticsAggregatedMetricsResponseContextTimeframe
		return ret
	}
	return *o.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsOverTimeResponseContext) GetTimeframeOk() (*AnalyticsAggregatedMetricsResponseContextTimeframe, bool) {
	if o == nil || o.Timeframe == nil {
		return nil, false
	}
	return o.Timeframe, true
}

// HasTimeframe returns a boolean if a field has been set.
func (o *AnalyticsMetricsOverTimeResponseContext) HasTimeframe() bool {
	if o != nil && o.Timeframe != nil {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given AnalyticsAggregatedMetricsResponseContextTimeframe and assigns it to the Timeframe field.
func (o *AnalyticsMetricsOverTimeResponseContext) SetTimeframe(v AnalyticsAggregatedMetricsResponseContextTimeframe) {
	o.Timeframe = &v
}

type NullableAnalyticsMetricsOverTimeResponseContext struct {
	value *AnalyticsMetricsOverTimeResponseContext
	isSet bool
}

func (v NullableAnalyticsMetricsOverTimeResponseContext) Get() *AnalyticsMetricsOverTimeResponseContext {
	return v.value
}

func (v *NullableAnalyticsMetricsOverTimeResponseContext) Set(val *AnalyticsMetricsOverTimeResponseContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsMetricsOverTimeResponseContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsMetricsOverTimeResponseContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsMetricsOverTimeResponseContext(val *AnalyticsMetricsOverTimeResponseContext) *NullableAnalyticsMetricsOverTimeResponseContext {
	return &NullableAnalyticsMetricsOverTimeResponseContext{value: val, isSet: true}
}
