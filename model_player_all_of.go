/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// PlayerAllOf struct for PlayerAllOf
type PlayerAllOf struct {
	PlayerId *string `json:"playerId,omitempty"`
	// When the player was created, presented in ISO-8601 format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// When the player was last updated, presented in ISO-8601 format.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// Deprecated
	ShapeMargin *int32 `json:"shapeMargin,omitempty"`
	// Deprecated
	ShapeRadius *int32 `json:"shapeRadius,omitempty"`
	// Deprecated
	ShapeAspect *string `json:"shapeAspect,omitempty"`
	// Deprecated
	ShapeBackgroundTop *string `json:"shapeBackgroundTop,omitempty"`
	// Deprecated
	ShapeBackgroundBottom *string `json:"shapeBackgroundBottom,omitempty"`
	// Deprecated
	LinkActive *string            `json:"linkActive,omitempty"`
	Assets     *PlayerAllOfAssets `json:"assets,omitempty"`
}

// NewPlayerAllOf instantiates a new PlayerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayerAllOf() *PlayerAllOf {
	this := PlayerAllOf{}
	return &this
}

// NewPlayerAllOfWithDefaults instantiates a new PlayerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayerAllOfWithDefaults() *PlayerAllOf {
	this := PlayerAllOf{}
	return &this
}

// GetPlayerId returns the PlayerId field value if set, zero value otherwise.
func (o *PlayerAllOf) GetPlayerId() string {
	if o == nil || o.PlayerId == nil {
		var ret string
		return ret
	}
	return *o.PlayerId
}

// GetPlayerIdOk returns a tuple with the PlayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetPlayerIdOk() (*string, bool) {
	if o == nil || o.PlayerId == nil {
		return nil, false
	}
	return o.PlayerId, true
}

// HasPlayerId returns a boolean if a field has been set.
func (o *PlayerAllOf) HasPlayerId() bool {
	if o != nil && o.PlayerId != nil {
		return true
	}

	return false
}

// SetPlayerId gets a reference to the given string and assigns it to the PlayerId field.
func (o *PlayerAllOf) SetPlayerId(v string) {
	o.PlayerId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PlayerAllOf) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PlayerAllOf) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PlayerAllOf) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PlayerAllOf) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PlayerAllOf) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *PlayerAllOf) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetShapeMargin returns the ShapeMargin field value if set, zero value otherwise.
func (o *PlayerAllOf) GetShapeMargin() int32 {
	if o == nil || o.ShapeMargin == nil {
		var ret int32
		return ret
	}
	return *o.ShapeMargin
}

// GetShapeMarginOk returns a tuple with the ShapeMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetShapeMarginOk() (*int32, bool) {
	if o == nil || o.ShapeMargin == nil {
		return nil, false
	}
	return o.ShapeMargin, true
}

// HasShapeMargin returns a boolean if a field has been set.
func (o *PlayerAllOf) HasShapeMargin() bool {
	if o != nil && o.ShapeMargin != nil {
		return true
	}

	return false
}

// SetShapeMargin gets a reference to the given int32 and assigns it to the ShapeMargin field.
func (o *PlayerAllOf) SetShapeMargin(v int32) {
	o.ShapeMargin = &v
}

// GetShapeRadius returns the ShapeRadius field value if set, zero value otherwise.
func (o *PlayerAllOf) GetShapeRadius() int32 {
	if o == nil || o.ShapeRadius == nil {
		var ret int32
		return ret
	}
	return *o.ShapeRadius
}

// GetShapeRadiusOk returns a tuple with the ShapeRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetShapeRadiusOk() (*int32, bool) {
	if o == nil || o.ShapeRadius == nil {
		return nil, false
	}
	return o.ShapeRadius, true
}

// HasShapeRadius returns a boolean if a field has been set.
func (o *PlayerAllOf) HasShapeRadius() bool {
	if o != nil && o.ShapeRadius != nil {
		return true
	}

	return false
}

// SetShapeRadius gets a reference to the given int32 and assigns it to the ShapeRadius field.
func (o *PlayerAllOf) SetShapeRadius(v int32) {
	o.ShapeRadius = &v
}

// GetShapeAspect returns the ShapeAspect field value if set, zero value otherwise.
func (o *PlayerAllOf) GetShapeAspect() string {
	if o == nil || o.ShapeAspect == nil {
		var ret string
		return ret
	}
	return *o.ShapeAspect
}

// GetShapeAspectOk returns a tuple with the ShapeAspect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetShapeAspectOk() (*string, bool) {
	if o == nil || o.ShapeAspect == nil {
		return nil, false
	}
	return o.ShapeAspect, true
}

// HasShapeAspect returns a boolean if a field has been set.
func (o *PlayerAllOf) HasShapeAspect() bool {
	if o != nil && o.ShapeAspect != nil {
		return true
	}

	return false
}

// SetShapeAspect gets a reference to the given string and assigns it to the ShapeAspect field.
func (o *PlayerAllOf) SetShapeAspect(v string) {
	o.ShapeAspect = &v
}

// GetShapeBackgroundTop returns the ShapeBackgroundTop field value if set, zero value otherwise.
func (o *PlayerAllOf) GetShapeBackgroundTop() string {
	if o == nil || o.ShapeBackgroundTop == nil {
		var ret string
		return ret
	}
	return *o.ShapeBackgroundTop
}

// GetShapeBackgroundTopOk returns a tuple with the ShapeBackgroundTop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetShapeBackgroundTopOk() (*string, bool) {
	if o == nil || o.ShapeBackgroundTop == nil {
		return nil, false
	}
	return o.ShapeBackgroundTop, true
}

// HasShapeBackgroundTop returns a boolean if a field has been set.
func (o *PlayerAllOf) HasShapeBackgroundTop() bool {
	if o != nil && o.ShapeBackgroundTop != nil {
		return true
	}

	return false
}

// SetShapeBackgroundTop gets a reference to the given string and assigns it to the ShapeBackgroundTop field.
func (o *PlayerAllOf) SetShapeBackgroundTop(v string) {
	o.ShapeBackgroundTop = &v
}

// GetShapeBackgroundBottom returns the ShapeBackgroundBottom field value if set, zero value otherwise.
func (o *PlayerAllOf) GetShapeBackgroundBottom() string {
	if o == nil || o.ShapeBackgroundBottom == nil {
		var ret string
		return ret
	}
	return *o.ShapeBackgroundBottom
}

// GetShapeBackgroundBottomOk returns a tuple with the ShapeBackgroundBottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetShapeBackgroundBottomOk() (*string, bool) {
	if o == nil || o.ShapeBackgroundBottom == nil {
		return nil, false
	}
	return o.ShapeBackgroundBottom, true
}

// HasShapeBackgroundBottom returns a boolean if a field has been set.
func (o *PlayerAllOf) HasShapeBackgroundBottom() bool {
	if o != nil && o.ShapeBackgroundBottom != nil {
		return true
	}

	return false
}

// SetShapeBackgroundBottom gets a reference to the given string and assigns it to the ShapeBackgroundBottom field.
func (o *PlayerAllOf) SetShapeBackgroundBottom(v string) {
	o.ShapeBackgroundBottom = &v
}

// GetLinkActive returns the LinkActive field value if set, zero value otherwise.
func (o *PlayerAllOf) GetLinkActive() string {
	if o == nil || o.LinkActive == nil {
		var ret string
		return ret
	}
	return *o.LinkActive
}

// GetLinkActiveOk returns a tuple with the LinkActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetLinkActiveOk() (*string, bool) {
	if o == nil || o.LinkActive == nil {
		return nil, false
	}
	return o.LinkActive, true
}

// HasLinkActive returns a boolean if a field has been set.
func (o *PlayerAllOf) HasLinkActive() bool {
	if o != nil && o.LinkActive != nil {
		return true
	}

	return false
}

// SetLinkActive gets a reference to the given string and assigns it to the LinkActive field.
func (o *PlayerAllOf) SetLinkActive(v string) {
	o.LinkActive = &v
}

// GetAssets returns the Assets field value if set, zero value otherwise.
func (o *PlayerAllOf) GetAssets() PlayerAllOfAssets {
	if o == nil || o.Assets == nil {
		var ret PlayerAllOfAssets
		return ret
	}
	return *o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAllOf) GetAssetsOk() (*PlayerAllOfAssets, bool) {
	if o == nil || o.Assets == nil {
		return nil, false
	}
	return o.Assets, true
}

// HasAssets returns a boolean if a field has been set.
func (o *PlayerAllOf) HasAssets() bool {
	if o != nil && o.Assets != nil {
		return true
	}

	return false
}

// SetAssets gets a reference to the given PlayerAllOfAssets and assigns it to the Assets field.
func (o *PlayerAllOf) SetAssets(v PlayerAllOfAssets) {
	o.Assets = &v
}

type NullablePlayerAllOf struct {
	value *PlayerAllOf
	isSet bool
}

func (v NullablePlayerAllOf) Get() *PlayerAllOf {
	return v.value
}

func (v *NullablePlayerAllOf) Set(val *PlayerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayerAllOf(val *PlayerAllOf) *NullablePlayerAllOf {
	return &NullablePlayerAllOf{value: val, isSet: true}
}
