/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// VideoSessionReferrer struct for VideoSessionReferrer
type VideoSessionReferrer struct {
	// The link the viewer used to reach the video session.
	Url *string `json:"url,omitempty"`
	// How they arrived at the site, for example organic or paid. Organic meaning they found it themselves and paid meaning they followed a link from an advertisement.
	Medium *string `json:"medium,omitempty"`
	// The source the referrer came from to the video session. For example if they searched through google to find the stream.
	Source *string `json:"source,omitempty"`
	// The search term they typed to arrive at the video session.
	SearchTerm *string `json:"searchTerm,omitempty"`
}

// NewVideoSessionReferrer instantiates a new VideoSessionReferrer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoSessionReferrer() *VideoSessionReferrer {
	this := VideoSessionReferrer{}
	return &this
}

// NewVideoSessionReferrerWithDefaults instantiates a new VideoSessionReferrer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoSessionReferrerWithDefaults() *VideoSessionReferrer {
	this := VideoSessionReferrer{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *VideoSessionReferrer) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionReferrer) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *VideoSessionReferrer) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *VideoSessionReferrer) SetUrl(v string) {
	o.Url = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *VideoSessionReferrer) GetMedium() string {
	if o == nil || o.Medium == nil {
		var ret string
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionReferrer) GetMediumOk() (*string, bool) {
	if o == nil || o.Medium == nil {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *VideoSessionReferrer) HasMedium() bool {
	if o != nil && o.Medium != nil {
		return true
	}

	return false
}

// SetMedium gets a reference to the given string and assigns it to the Medium field.
func (o *VideoSessionReferrer) SetMedium(v string) {
	o.Medium = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *VideoSessionReferrer) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionReferrer) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *VideoSessionReferrer) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *VideoSessionReferrer) SetSource(v string) {
	o.Source = &v
}

// GetSearchTerm returns the SearchTerm field value if set, zero value otherwise.
func (o *VideoSessionReferrer) GetSearchTerm() string {
	if o == nil || o.SearchTerm == nil {
		var ret string
		return ret
	}
	return *o.SearchTerm
}

// GetSearchTermOk returns a tuple with the SearchTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionReferrer) GetSearchTermOk() (*string, bool) {
	if o == nil || o.SearchTerm == nil {
		return nil, false
	}
	return o.SearchTerm, true
}

// HasSearchTerm returns a boolean if a field has been set.
func (o *VideoSessionReferrer) HasSearchTerm() bool {
	if o != nil && o.SearchTerm != nil {
		return true
	}

	return false
}

// SetSearchTerm gets a reference to the given string and assigns it to the SearchTerm field.
func (o *VideoSessionReferrer) SetSearchTerm(v string) {
	o.SearchTerm = &v
}

type NullableVideoSessionReferrer struct {
	value *VideoSessionReferrer
	isSet bool
}

func (v NullableVideoSessionReferrer) Get() *VideoSessionReferrer {
	return v.value
}

func (v *NullableVideoSessionReferrer) Set(val *VideoSessionReferrer) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoSessionReferrer) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoSessionReferrer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoSessionReferrer(val *VideoSessionReferrer) *NullableVideoSessionReferrer {
	return &NullableVideoSessionReferrer{value: val, isSet: true}
}
