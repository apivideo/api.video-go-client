/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// AnalyticsMetricsBreakdownResponseContext struct for AnalyticsMetricsBreakdownResponseContext
type AnalyticsMetricsBreakdownResponseContext struct {
	// Returns the metric you selected.
	Metric *string `json:"metric,omitempty"`
	// Returns the dimension you selected.
	Breakdown *string                                             `json:"breakdown,omitempty"`
	Timeframe *AnalyticsAggregatedMetricsResponseContextTimeframe `json:"timeframe,omitempty"`
}

// NewAnalyticsMetricsBreakdownResponseContext instantiates a new AnalyticsMetricsBreakdownResponseContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsMetricsBreakdownResponseContext() *AnalyticsMetricsBreakdownResponseContext {
	this := AnalyticsMetricsBreakdownResponseContext{}
	return &this
}

// NewAnalyticsMetricsBreakdownResponseContextWithDefaults instantiates a new AnalyticsMetricsBreakdownResponseContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsMetricsBreakdownResponseContextWithDefaults() *AnalyticsMetricsBreakdownResponseContext {
	this := AnalyticsMetricsBreakdownResponseContext{}
	return &this
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *AnalyticsMetricsBreakdownResponseContext) GetMetric() string {
	if o == nil || o.Metric == nil {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsBreakdownResponseContext) GetMetricOk() (*string, bool) {
	if o == nil || o.Metric == nil {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *AnalyticsMetricsBreakdownResponseContext) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *AnalyticsMetricsBreakdownResponseContext) SetMetric(v string) {
	o.Metric = &v
}

// GetBreakdown returns the Breakdown field value if set, zero value otherwise.
func (o *AnalyticsMetricsBreakdownResponseContext) GetBreakdown() string {
	if o == nil || o.Breakdown == nil {
		var ret string
		return ret
	}
	return *o.Breakdown
}

// GetBreakdownOk returns a tuple with the Breakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsBreakdownResponseContext) GetBreakdownOk() (*string, bool) {
	if o == nil || o.Breakdown == nil {
		return nil, false
	}
	return o.Breakdown, true
}

// HasBreakdown returns a boolean if a field has been set.
func (o *AnalyticsMetricsBreakdownResponseContext) HasBreakdown() bool {
	if o != nil && o.Breakdown != nil {
		return true
	}

	return false
}

// SetBreakdown gets a reference to the given string and assigns it to the Breakdown field.
func (o *AnalyticsMetricsBreakdownResponseContext) SetBreakdown(v string) {
	o.Breakdown = &v
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise.
func (o *AnalyticsMetricsBreakdownResponseContext) GetTimeframe() AnalyticsAggregatedMetricsResponseContextTimeframe {
	if o == nil || o.Timeframe == nil {
		var ret AnalyticsAggregatedMetricsResponseContextTimeframe
		return ret
	}
	return *o.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsBreakdownResponseContext) GetTimeframeOk() (*AnalyticsAggregatedMetricsResponseContextTimeframe, bool) {
	if o == nil || o.Timeframe == nil {
		return nil, false
	}
	return o.Timeframe, true
}

// HasTimeframe returns a boolean if a field has been set.
func (o *AnalyticsMetricsBreakdownResponseContext) HasTimeframe() bool {
	if o != nil && o.Timeframe != nil {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given AnalyticsAggregatedMetricsResponseContextTimeframe and assigns it to the Timeframe field.
func (o *AnalyticsMetricsBreakdownResponseContext) SetTimeframe(v AnalyticsAggregatedMetricsResponseContextTimeframe) {
	o.Timeframe = &v
}

type NullableAnalyticsMetricsBreakdownResponseContext struct {
	value *AnalyticsMetricsBreakdownResponseContext
	isSet bool
}

func (v NullableAnalyticsMetricsBreakdownResponseContext) Get() *AnalyticsMetricsBreakdownResponseContext {
	return v.value
}

func (v *NullableAnalyticsMetricsBreakdownResponseContext) Set(val *AnalyticsMetricsBreakdownResponseContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsMetricsBreakdownResponseContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsMetricsBreakdownResponseContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsMetricsBreakdownResponseContext(val *AnalyticsMetricsBreakdownResponseContext) *NullableAnalyticsMetricsBreakdownResponseContext {
	return &NullableAnalyticsMetricsBreakdownResponseContext{value: val, isSet: true}
}
