/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// AnalyticsData struct for AnalyticsData
type AnalyticsData struct {
	// Shows a value for the property you have specified for `dimension` in your request. For example, if you requested `dimension=videoId`, each `value` field in the response returns a different videoId.
	Value string `json:"value"`
	// Shows the number of play events for one specific `value`.
	Plays int32 `json:"plays"`
}

// NewAnalyticsData instantiates a new AnalyticsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsData(value string, plays int32) *AnalyticsData {
	this := AnalyticsData{}
	this.Value = value
	this.Plays = plays
	return &this
}

// NewAnalyticsDataWithDefaults instantiates a new AnalyticsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsDataWithDefaults() *AnalyticsData {
	this := AnalyticsData{}
	return &this
}

// GetValue returns the Value field value
func (o *AnalyticsData) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AnalyticsData) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AnalyticsData) SetValue(v string) {
	o.Value = v
}

// GetPlays returns the Plays field value
func (o *AnalyticsData) GetPlays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Plays
}

// GetPlaysOk returns a tuple with the Plays field value
// and a boolean to check if the value has been set.
func (o *AnalyticsData) GetPlaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plays, true
}

// SetPlays sets field value
func (o *AnalyticsData) SetPlays(v int32) {
	o.Plays = v
}

type NullableAnalyticsData struct {
	value *AnalyticsData
	isSet bool
}

func (v NullableAnalyticsData) Get() *AnalyticsData {
	return v.value
}

func (v *NullableAnalyticsData) Set(val *AnalyticsData) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsData) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsData(val *AnalyticsData) *NullableAnalyticsData {
	return &NullableAnalyticsData{value: val, isSet: true}
}
