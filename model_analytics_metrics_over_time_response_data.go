/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// AnalyticsMetricsOverTimeResponseData struct for AnalyticsMetricsOverTimeResponseData
type AnalyticsMetricsOverTimeResponseData struct {
	// Returns the timestamp of the event that belongs to a specific metric in ATOM date-time format. For example, if you set `play` with an `hour` interval in your request, then `emittedAt` returns the hourly timestamps of every play event within the timeframe you defined.
	EmittedAt *string `json:"emittedAt,omitempty"`
	// Returns the data for a specific metric value.
	MetricValue *float32 `json:"metricValue,omitempty"`
}

// NewAnalyticsMetricsOverTimeResponseData instantiates a new AnalyticsMetricsOverTimeResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsMetricsOverTimeResponseData() *AnalyticsMetricsOverTimeResponseData {
	this := AnalyticsMetricsOverTimeResponseData{}
	return &this
}

// NewAnalyticsMetricsOverTimeResponseDataWithDefaults instantiates a new AnalyticsMetricsOverTimeResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsMetricsOverTimeResponseDataWithDefaults() *AnalyticsMetricsOverTimeResponseData {
	this := AnalyticsMetricsOverTimeResponseData{}
	return &this
}

// GetEmittedAt returns the EmittedAt field value if set, zero value otherwise.
func (o *AnalyticsMetricsOverTimeResponseData) GetEmittedAt() string {
	if o == nil || o.EmittedAt == nil {
		var ret string
		return ret
	}
	return *o.EmittedAt
}

// GetEmittedAtOk returns a tuple with the EmittedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsOverTimeResponseData) GetEmittedAtOk() (*string, bool) {
	if o == nil || o.EmittedAt == nil {
		return nil, false
	}
	return o.EmittedAt, true
}

// HasEmittedAt returns a boolean if a field has been set.
func (o *AnalyticsMetricsOverTimeResponseData) HasEmittedAt() bool {
	if o != nil && o.EmittedAt != nil {
		return true
	}

	return false
}

// SetEmittedAt gets a reference to the given string and assigns it to the EmittedAt field.
func (o *AnalyticsMetricsOverTimeResponseData) SetEmittedAt(v string) {
	o.EmittedAt = &v
}

// GetMetricValue returns the MetricValue field value if set, zero value otherwise.
func (o *AnalyticsMetricsOverTimeResponseData) GetMetricValue() float32 {
	if o == nil || o.MetricValue == nil {
		var ret float32
		return ret
	}
	return *o.MetricValue
}

// GetMetricValueOk returns a tuple with the MetricValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsMetricsOverTimeResponseData) GetMetricValueOk() (*float32, bool) {
	if o == nil || o.MetricValue == nil {
		return nil, false
	}
	return o.MetricValue, true
}

// HasMetricValue returns a boolean if a field has been set.
func (o *AnalyticsMetricsOverTimeResponseData) HasMetricValue() bool {
	if o != nil && o.MetricValue != nil {
		return true
	}

	return false
}

// SetMetricValue gets a reference to the given float32 and assigns it to the MetricValue field.
func (o *AnalyticsMetricsOverTimeResponseData) SetMetricValue(v float32) {
	o.MetricValue = &v
}

type NullableAnalyticsMetricsOverTimeResponseData struct {
	value *AnalyticsMetricsOverTimeResponseData
	isSet bool
}

func (v NullableAnalyticsMetricsOverTimeResponseData) Get() *AnalyticsMetricsOverTimeResponseData {
	return v.value
}

func (v *NullableAnalyticsMetricsOverTimeResponseData) Set(val *AnalyticsMetricsOverTimeResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsMetricsOverTimeResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsMetricsOverTimeResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsMetricsOverTimeResponseData(val *AnalyticsMetricsOverTimeResponseData) *NullableAnalyticsMetricsOverTimeResponseData {
	return &NullableAnalyticsMetricsOverTimeResponseData{value: val, isSet: true}
}
