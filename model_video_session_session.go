/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// VideoSessionSession struct for VideoSessionSession
type VideoSessionSession struct {
	// The unique identifier for the session that you can use to track what happens during it.
	SessionId *string `json:"sessionId,omitempty"`
	// When the video session started, presented in ISO-8601 format.
	LoadedAt *string `json:"loadedAt,omitempty"`
	// When the video session ended, presented in ISO-8601 format.
	EndedAt *string `json:"endedAt,omitempty"`
	// A list of key value pairs that you use to provide metadata for your video. These pairs can be made dynamic, allowing you to segment your audience. You can also just use the pairs as another way to tag and categorize your videos.
	Metadata *[]Metadata `json:"metadata,omitempty"`
}

// NewVideoSessionSession instantiates a new VideoSessionSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoSessionSession() *VideoSessionSession {
	this := VideoSessionSession{}
	return &this
}

// NewVideoSessionSessionWithDefaults instantiates a new VideoSessionSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoSessionSessionWithDefaults() *VideoSessionSession {
	this := VideoSessionSession{}
	return &this
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *VideoSessionSession) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionSession) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *VideoSessionSession) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *VideoSessionSession) SetSessionId(v string) {
	o.SessionId = &v
}

// GetLoadedAt returns the LoadedAt field value if set, zero value otherwise.
func (o *VideoSessionSession) GetLoadedAt() string {
	if o == nil || o.LoadedAt == nil {
		var ret string
		return ret
	}
	return *o.LoadedAt
}

// GetLoadedAtOk returns a tuple with the LoadedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionSession) GetLoadedAtOk() (*string, bool) {
	if o == nil || o.LoadedAt == nil {
		return nil, false
	}
	return o.LoadedAt, true
}

// HasLoadedAt returns a boolean if a field has been set.
func (o *VideoSessionSession) HasLoadedAt() bool {
	if o != nil && o.LoadedAt != nil {
		return true
	}

	return false
}

// SetLoadedAt gets a reference to the given string and assigns it to the LoadedAt field.
func (o *VideoSessionSession) SetLoadedAt(v string) {
	o.LoadedAt = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *VideoSessionSession) GetEndedAt() string {
	if o == nil || o.EndedAt == nil {
		var ret string
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionSession) GetEndedAtOk() (*string, bool) {
	if o == nil || o.EndedAt == nil {
		return nil, false
	}
	return o.EndedAt, true
}

// HasEndedAt returns a boolean if a field has been set.
func (o *VideoSessionSession) HasEndedAt() bool {
	if o != nil && o.EndedAt != nil {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given string and assigns it to the EndedAt field.
func (o *VideoSessionSession) SetEndedAt(v string) {
	o.EndedAt = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *VideoSessionSession) GetMetadata() []Metadata {
	if o == nil || o.Metadata == nil {
		var ret []Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSessionSession) GetMetadataOk() (*[]Metadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *VideoSessionSession) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []Metadata and assigns it to the Metadata field.
func (o *VideoSessionSession) SetMetadata(v []Metadata) {
	o.Metadata = &v
}

type NullableVideoSessionSession struct {
	value *VideoSessionSession
	isSet bool
}

func (v NullableVideoSessionSession) Get() *VideoSessionSession {
	return v.value
}

func (v *NullableVideoSessionSession) Set(val *VideoSessionSession) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoSessionSession) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoSessionSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoSessionSession(val *VideoSessionSession) *NullableVideoSessionSession {
	return &NullableVideoSessionSession{value: val, isSet: true}
}
