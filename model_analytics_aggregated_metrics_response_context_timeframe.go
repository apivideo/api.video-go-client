/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// AnalyticsAggregatedMetricsResponseContextTimeframe Returns the starting and ending date-times of the period you want analytics for.
type AnalyticsAggregatedMetricsResponseContextTimeframe struct {
	// Returns the starting date-time of the period you want analytics for in ATOM date-time format.
	From *string `json:"from,omitempty"`
	// Returns the starting date-time of the period you want analytics for in ATOM date-time format.
	To *string `json:"to,omitempty"`
}

// NewAnalyticsAggregatedMetricsResponseContextTimeframe instantiates a new AnalyticsAggregatedMetricsResponseContextTimeframe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsAggregatedMetricsResponseContextTimeframe() *AnalyticsAggregatedMetricsResponseContextTimeframe {
	this := AnalyticsAggregatedMetricsResponseContextTimeframe{}
	return &this
}

// NewAnalyticsAggregatedMetricsResponseContextTimeframeWithDefaults instantiates a new AnalyticsAggregatedMetricsResponseContextTimeframe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsAggregatedMetricsResponseContextTimeframeWithDefaults() *AnalyticsAggregatedMetricsResponseContextTimeframe {
	this := AnalyticsAggregatedMetricsResponseContextTimeframe{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) GetFrom() string {
	if o == nil || o.From == nil {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) GetFromOk() (*string, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) GetTo() string {
	if o == nil || o.To == nil {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) GetToOk() (*string, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *AnalyticsAggregatedMetricsResponseContextTimeframe) SetTo(v string) {
	o.To = &v
}

type NullableAnalyticsAggregatedMetricsResponseContextTimeframe struct {
	value *AnalyticsAggregatedMetricsResponseContextTimeframe
	isSet bool
}

func (v NullableAnalyticsAggregatedMetricsResponseContextTimeframe) Get() *AnalyticsAggregatedMetricsResponseContextTimeframe {
	return v.value
}

func (v *NullableAnalyticsAggregatedMetricsResponseContextTimeframe) Set(val *AnalyticsAggregatedMetricsResponseContextTimeframe) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsAggregatedMetricsResponseContextTimeframe) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsAggregatedMetricsResponseContextTimeframe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsAggregatedMetricsResponseContextTimeframe(val *AnalyticsAggregatedMetricsResponseContextTimeframe) *NullableAnalyticsAggregatedMetricsResponseContextTimeframe {
	return &NullableAnalyticsAggregatedMetricsResponseContextTimeframe{value: val, isSet: true}
}
