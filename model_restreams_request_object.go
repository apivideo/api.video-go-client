/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// RestreamsRequestObject Adding restream destinations is optional. However, if you set a restream destination, you must provide all attributes for each destination.
type RestreamsRequestObject struct {
	// Use this parameter to define a name for the restream destination.
	Name string `json:"name"`
	// Use this parameter to set the RTMP URL of the restream destination.
	ServerUrl string `json:"serverUrl"`
	// Use this parameter to provide the unique key of the live stream that you want to restream.
	StreamKey string `json:"streamKey"`
}

// NewRestreamsRequestObject instantiates a new RestreamsRequestObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestreamsRequestObject(name string, serverUrl string, streamKey string) *RestreamsRequestObject {
	this := RestreamsRequestObject{}
	this.Name = name
	this.ServerUrl = serverUrl
	this.StreamKey = streamKey
	return &this
}

// NewRestreamsRequestObjectWithDefaults instantiates a new RestreamsRequestObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestreamsRequestObjectWithDefaults() *RestreamsRequestObject {
	this := RestreamsRequestObject{}
	return &this
}

// GetName returns the Name field value
func (o *RestreamsRequestObject) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RestreamsRequestObject) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RestreamsRequestObject) SetName(v string) {
	o.Name = v
}

// GetServerUrl returns the ServerUrl field value
func (o *RestreamsRequestObject) GetServerUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUrl
}

// GetServerUrlOk returns a tuple with the ServerUrl field value
// and a boolean to check if the value has been set.
func (o *RestreamsRequestObject) GetServerUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUrl, true
}

// SetServerUrl sets field value
func (o *RestreamsRequestObject) SetServerUrl(v string) {
	o.ServerUrl = v
}

// GetStreamKey returns the StreamKey field value
func (o *RestreamsRequestObject) GetStreamKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StreamKey
}

// GetStreamKeyOk returns a tuple with the StreamKey field value
// and a boolean to check if the value has been set.
func (o *RestreamsRequestObject) GetStreamKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreamKey, true
}

// SetStreamKey sets field value
func (o *RestreamsRequestObject) SetStreamKey(v string) {
	o.StreamKey = v
}

type NullableRestreamsRequestObject struct {
	value *RestreamsRequestObject
	isSet bool
}

func (v NullableRestreamsRequestObject) Get() *RestreamsRequestObject {
	return v.value
}

func (v *NullableRestreamsRequestObject) Set(val *RestreamsRequestObject) {
	v.value = val
	v.isSet = true
}

func (v NullableRestreamsRequestObject) IsSet() bool {
	return v.isSet
}

func (v *NullableRestreamsRequestObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestreamsRequestObject(val *RestreamsRequestObject) *NullableRestreamsRequestObject {
	return &NullableRestreamsRequestObject{value: val, isSet: true}
}
