/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// LiveStreamSessionReferrer struct for LiveStreamSessionReferrer
type LiveStreamSessionReferrer struct {
	// The website the viewer of the live stream was referred to in order to view the live stream.
	Url *string `json:"url,omitempty"`
	// The type of search that brought the viewer to the live stream. Organic would be they found it on their own, paid would be they found it via an advertisement.
	Medium *string `json:"medium,omitempty"`
	// Where the viewer came from to see the live stream (usually where they searched from).
	Source *string `json:"source,omitempty"`
	// What term they searched for that led them to the live stream.
	SearchTerm *string `json:"searchTerm,omitempty"`
}

// NewLiveStreamSessionReferrer instantiates a new LiveStreamSessionReferrer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamSessionReferrer() *LiveStreamSessionReferrer {
	this := LiveStreamSessionReferrer{}
	return &this
}

// NewLiveStreamSessionReferrerWithDefaults instantiates a new LiveStreamSessionReferrer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamSessionReferrerWithDefaults() *LiveStreamSessionReferrer {
	this := LiveStreamSessionReferrer{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *LiveStreamSessionReferrer) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamSessionReferrer) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *LiveStreamSessionReferrer) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *LiveStreamSessionReferrer) SetUrl(v string) {
	o.Url = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *LiveStreamSessionReferrer) GetMedium() string {
	if o == nil || o.Medium == nil {
		var ret string
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamSessionReferrer) GetMediumOk() (*string, bool) {
	if o == nil || o.Medium == nil {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *LiveStreamSessionReferrer) HasMedium() bool {
	if o != nil && o.Medium != nil {
		return true
	}

	return false
}

// SetMedium gets a reference to the given string and assigns it to the Medium field.
func (o *LiveStreamSessionReferrer) SetMedium(v string) {
	o.Medium = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *LiveStreamSessionReferrer) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamSessionReferrer) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *LiveStreamSessionReferrer) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *LiveStreamSessionReferrer) SetSource(v string) {
	o.Source = &v
}

// GetSearchTerm returns the SearchTerm field value if set, zero value otherwise.
func (o *LiveStreamSessionReferrer) GetSearchTerm() string {
	if o == nil || o.SearchTerm == nil {
		var ret string
		return ret
	}
	return *o.SearchTerm
}

// GetSearchTermOk returns a tuple with the SearchTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamSessionReferrer) GetSearchTermOk() (*string, bool) {
	if o == nil || o.SearchTerm == nil {
		return nil, false
	}
	return o.SearchTerm, true
}

// HasSearchTerm returns a boolean if a field has been set.
func (o *LiveStreamSessionReferrer) HasSearchTerm() bool {
	if o != nil && o.SearchTerm != nil {
		return true
	}

	return false
}

// SetSearchTerm gets a reference to the given string and assigns it to the SearchTerm field.
func (o *LiveStreamSessionReferrer) SetSearchTerm(v string) {
	o.SearchTerm = &v
}

type NullableLiveStreamSessionReferrer struct {
	value *LiveStreamSessionReferrer
	isSet bool
}

func (v NullableLiveStreamSessionReferrer) Get() *LiveStreamSessionReferrer {
	return v.value
}

func (v *NullableLiveStreamSessionReferrer) Set(val *LiveStreamSessionReferrer) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamSessionReferrer) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamSessionReferrer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamSessionReferrer(val *LiveStreamSessionReferrer) *NullableLiveStreamSessionReferrer {
	return &NullableLiveStreamSessionReferrer{value: val, isSet: true}
}
