/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// PlayerThemeAssets struct for PlayerThemeAssets
type PlayerThemeAssets struct {
	// The name of the file containing the logo you want to use.
	Logo *string `json:"logo,omitempty"`
	// The path to the file containing your logo.
	Link *string `json:"link,omitempty"`
}

// NewPlayerThemeAssets instantiates a new PlayerThemeAssets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayerThemeAssets() *PlayerThemeAssets {
	this := PlayerThemeAssets{}
	return &this
}

// NewPlayerThemeAssetsWithDefaults instantiates a new PlayerThemeAssets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayerThemeAssetsWithDefaults() *PlayerThemeAssets {
	this := PlayerThemeAssets{}
	return &this
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *PlayerThemeAssets) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeAssets) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *PlayerThemeAssets) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *PlayerThemeAssets) SetLogo(v string) {
	o.Logo = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *PlayerThemeAssets) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerThemeAssets) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *PlayerThemeAssets) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *PlayerThemeAssets) SetLink(v string) {
	o.Link = &v
}

type NullablePlayerThemeAssets struct {
	value *PlayerThemeAssets
	isSet bool
}

func (v NullablePlayerThemeAssets) Get() *PlayerThemeAssets {
	return v.value
}

func (v *NullablePlayerThemeAssets) Set(val *PlayerThemeAssets) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayerThemeAssets) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayerThemeAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayerThemeAssets(val *PlayerThemeAssets) *NullablePlayerThemeAssets {
	return &NullablePlayerThemeAssets{value: val, isSet: true}
}
