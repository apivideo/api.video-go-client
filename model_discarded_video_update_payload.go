/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apivideosdk

import (
//"encoding/json"
)

// DiscardedVideoUpdatePayload struct for DiscardedVideoUpdatePayload
type DiscardedVideoUpdatePayload struct {
	// Use this parameter to restore a discarded video when you have the Video Restore feature enabled. This parameter only accepts `false` as a value!
	Discarded *bool `json:"discarded,omitempty"`
}

// NewDiscardedVideoUpdatePayload instantiates a new DiscardedVideoUpdatePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscardedVideoUpdatePayload() *DiscardedVideoUpdatePayload {
	this := DiscardedVideoUpdatePayload{}
	return &this
}

// NewDiscardedVideoUpdatePayloadWithDefaults instantiates a new DiscardedVideoUpdatePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscardedVideoUpdatePayloadWithDefaults() *DiscardedVideoUpdatePayload {
	this := DiscardedVideoUpdatePayload{}
	return &this
}

// GetDiscarded returns the Discarded field value if set, zero value otherwise.
func (o *DiscardedVideoUpdatePayload) GetDiscarded() bool {
	if o == nil || o.Discarded == nil {
		var ret bool
		return ret
	}
	return *o.Discarded
}

// GetDiscardedOk returns a tuple with the Discarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscardedVideoUpdatePayload) GetDiscardedOk() (*bool, bool) {
	if o == nil || o.Discarded == nil {
		return nil, false
	}
	return o.Discarded, true
}

// HasDiscarded returns a boolean if a field has been set.
func (o *DiscardedVideoUpdatePayload) HasDiscarded() bool {
	if o != nil && o.Discarded != nil {
		return true
	}

	return false
}

// SetDiscarded gets a reference to the given bool and assigns it to the Discarded field.
func (o *DiscardedVideoUpdatePayload) SetDiscarded(v bool) {
	o.Discarded = &v
}

type NullableDiscardedVideoUpdatePayload struct {
	value *DiscardedVideoUpdatePayload
	isSet bool
}

func (v NullableDiscardedVideoUpdatePayload) Get() *DiscardedVideoUpdatePayload {
	return v.value
}

func (v *NullableDiscardedVideoUpdatePayload) Set(val *DiscardedVideoUpdatePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscardedVideoUpdatePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscardedVideoUpdatePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscardedVideoUpdatePayload(val *DiscardedVideoUpdatePayload) *NullableDiscardedVideoUpdatePayload {
	return &NullableDiscardedVideoUpdatePayload{value: val, isSet: true}
}
